#= require_self
#= require ./action_cable/consumer

@ActionCable =
  INTERNAL: <%= ActionCable::INTERNAL.to_json %>

  createConsumer: (url) ->
    url ?= @getConfig("url") ? @INTERNAL.default_mount_path
    new ActionCable.Consumer @createWebSocketURL(url)

  getConfig: (name) ->
    element = document.head.querySelector("meta[name='action-cable-#{name}']")
    element?.getAttribute("content")

  createWebSocketURL: (url) ->
    if url and not /^wss?:/i.test(url)
      a = document.createElement("a")
      a.href = url
      # Fix populating Location properties in IE. Otherwise, protocol will be blank.
      a.href = a.href
      a.protocol = a.protocol.replace("http", "ws")
      a.href
    else
      url

  startDebugging: ->
    @debugging = true

  stopDebugging: ->
    @debugging = null

  log: (messages...) ->
    if @debugging
      messages.push(Date.now())
      console.log("[ActionCable]", messages...)

# Since we are `module.exports`-ing below, in order to make the internal `ActionCable class`
# recognize the `ActionCable` constant, we need to place the constant on the `window`, so that
# way it will be recognized.
window.ActionCable = @ActionCable

# We need to module.exports here, in order to make ActionCable a "true Node.js module".
# This makes it so that way an `Import` or `require` will load in the `ActionCable` module.
module?.exports = @ActionCable
