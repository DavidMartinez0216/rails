AllCops:
  TargetRubyVersion: 2.4
  # RuboCop has a bunch of cops enabled by default. This setting tells RuboCop
  # to ignore them, so only the ones explicitly set in this file are enabled.
  DisabledByDefault: true
  Exclude:
    - '**/templates/**/*'
    - '**/vendor/**/*'
    - 'actionpack/lib/action_dispatch/journey/parser.rb'
    - 'railties/test/fixtures/tmp/**/*'
    - 'node_modules/**/*'

Performance:
  Exclude:
    - '**/test/**/*'

Rails:
  Enabled: true

Rails/AssertNot:
  Description: Prefer assert_not over assert !
  Include:
    - '**/test/**/*'

Rails/RefuteMethods:
  Description: Prefer assert_not_x over refute_x
  Include:
    - '**/test/**/*'

Style/AndOr:
  Description: Use &&/|| instead of and/or.
  Enabled: true

Style/BracesAroundHashParameters:
  Description: Do not use braces for hash literals when they are the last argument of a method call.
  Enabled: true
  EnforcedStyle: context_dependent

Layout/CaseIndentation:
  Description: Align `when` with `case`
  Enabled: true

Layout/CommentIndentation:
  Description: Align comments with method definitions.
  Enabled: true

Layout/ElseAlignment:
  Description: Align elses and elsifs correctly.
  Enabled: true

Layout/EndAlignment:
  Description: Align `end` with the matching keyword or starting expression except for assignments, where it should be aligned with the LHS.
  Enabled: true
  EnforcedStyleAlignWith: variable
  AutoCorrect: true

Layout/EmptyLineAfterMagicComment:
  Description: Checks for a newline after the final magic comment.
  Enabled: true

Layout/EmptyLinesAroundBlockBody:
  Description: Keeps track of empty lines around block bodies.
  Enabled: true

Layout/EmptyLinesAroundClassBody:
  Description: Keeps track of empty lines around class bodies.
  Enabled: true

Layout/EmptyLinesAroundMethodBody:
  Description: Keeps track of empty lines around method bodies.
  Enabled: true

Layout/EmptyLinesAroundModuleBody:
  Description: Keeps track of empty lines around module bodies.
  Enabled: true

Layout/FirstParameterIndentation:
  Description: Checks the indentation of the first parameter in a method call. 
  Enabled: true

# Use Ruby >= 1.9 syntax for hashes. Prefer { a: :b } over { :a => :b }.
Style/HashSyntax:
  Description: Checks hash literal syntax.
  Enabled: true

Layout/IndentationConsistency:
  Description: Method definitions after `private` or `protected` isolated calls need one extra level of indentation.
  Enabled: true
  EnforcedStyle: rails

Layout/IndentationWidth:
  Description: Use 2 spaces for indentation.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#spaces-indentation
  Enabled: true

Layout/LeadingCommentSpace:
  Description: Checks whether comments have a leading space after the `#` denoting the start of the comment. 
  Enabled: true

Layout/SpaceAfterColon:
  Description: Checks for colon (:) not followed by some kind of space.
  Enabled: true

Layout/SpaceAfterComma:
  DEscription: Checks for comma (,) not followed by some kind of space.
  Enabled: true

Layout/SpaceAroundEqualsInParameterDefault:
  Description: Checks that the equals signs in parameter default assignments have or don't have surrounding space depending on configuration.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#spaces-around-equals
  Enabled: true

Layout/SpaceAroundKeyword:
  Description: Checks the spacing around the keywords.
  Enabled: true

Layout/SpaceAroundOperators:
  Description: Checks that operators have space around them, except for ** which should not have surrounding space.
  Enabled: true

Layout/SpaceBeforeComma:
  Description: Checks for comma (,) preceded by space.
  Enabled: true

Layout/SpaceBeforeFirstArg:
  Description: Checks that exactly one space is used between a method name and the first argument for method calls without parentheses.
  Enabled: true

Style/DefWithParentheses:
  Description: Checks for parentheses in the definition of a method, that does not take any arguments.
  Enabled: true

Style/MethodDefParentheses:
  Description: Checks if the method definitions have or don't have parentheses.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#method-parens
  Enabled: true

Style/FrozenStringLiteralComment:
  Description: Add the frozen_string_literal comment to the top of files to help transition from Ruby 2.3.0 to Ruby 3.0.
  Enabled: true
  EnforcedStyle: always
  Exclude:
    - 'actionview/test/**/*.builder'
    - 'actionview/test/**/*.ruby'
    - 'actionpack/test/**/*.builder'
    - 'actionpack/test/**/*.ruby'
    - 'activestorage/db/migrate/**/*.rb'

Style/RedundantFreeze:
  Description: Checks usages of Object#freeze on immutable objects.
  Enabled: true

Layout/SpaceBeforeBlockBraces:
  Description: Use `foo {}` not `foo{}`.
  Enabled: true

Layout/SpaceInsideBlockBraces:
  Description: Use `foo { bar }` not `foo {bar}`.
  Enabled: true
  EnforcedStyleForEmptyBraces: space

Layout/SpaceInsideHashLiteralBraces:
  Description: Use spaces inside hash literal braces - or don't.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#spaces-operators
  Enabled: true

Layout/SpaceInsideParens:
  Description: Checks for spaces inside ordinary round parentheses.
  Enabled: true

Style/StringLiterals:
  Description: Check quotes usage according to lint rule below.
  Enabled: true
  EnforcedStyle: double_quotes

Layout/Tab:
  Description: Detect hard tabs, no hard tabs.
  Enabled: true

Layout/TrailingBlankLines:
  Description: Blank lines should not have any spaces.
  Enabled: true

Layout/TrailingWhitespace:
  Description: No trailing whitespace.
  Enabled: true

Style/UnneededPercentQ:
  Description: Use quotes for string literals when they are enough.
  Enabled: true

Lint/RequireParentheses:
  Description: Use my_method(my_arg) not my_method( my_arg ) or my_method my_arg.
  Enabled: true

Lint/StringConversionInInterpolation:
  Description: Checks for string conversion in string interpolation, which is redundant.
  Enabled: true

Lint/UriEscapeUnescape:
  Enabled: true

Style/ParenthesesAroundCondition:
  Description: Don't use parentheses around the condition of an if/unless/while.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-parens-if
  Enabled: true

Style/RedundantReturn:
  Description: Don't use return where it's not required.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-explicit-return
  Enabled: true
  AllowMultipleReturnValues: true

Style/Semicolon:
  Description: Don't use semicolons to terminate expressions.
  StyleGuide: https://github.com/rubocop-hq/ruby-style-guide#no-semicolon
  Enabled: true
  AllowAsExpressionSeparator: true

Style/ColonMethodCall:
  Description: Prefer Foo.method over Foo::method
  Enabled: true

Style/TrivialAccessors:
  Description: Looks for trivial reader/writer methods, that could have been created with the attr_* family of functions automatically.
  Enabled: true

Performance/FlatMap:
  Enabled: true

Performance/RedundantMerge:
  Description: Use Hash#[]=, rather than Hash#merge! with a single key-value pair.
  Reference: https://github.com/JuanitoFatas/fast-ruby#hashmerge-vs-hash-code
  Enabled: true

Performance/StartWith:
  Description: Identifies unnecessary use of a regex where `String#start_with?` would suffice.
  Enabled: true

Performance/EndWith:
  Description: Identifies unnecessary use of a regex where `String#end_with?` would suffice.
  Enabled: true

Performance/RegexpMatch:
  Enabled: true

Performance/UnfreezeString:
  Description: In Ruby 2.3 or later, use unary plus operator to unfreeze a string literal instead of `String#dup` and `String.new`.
  Enabled: true
