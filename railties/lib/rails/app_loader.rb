# frozen_string_literal: true

require "pathname"
require "rails/version"

module Rails
  module AppLoader # :nodoc:
    extend self

    RUBY = Gem.ruby
    EXECUTABLES = ["bin/rails", "script/rails"]
    RAILS_WARNING = <<EOS
Beginning in Rails 6, Rails no longer ships with a custom `rails` binstub at
./bin/rails but instead relies on the Bundler-generated `rails` binstub.

If you are seeing this message, your binstub at ./bin/rails was generated by an
old version of Rails instead of Bundler.

Make sure you replace it with the default's bundler binstub:

  bundle binstubs bundler --force
  git add bin/bundle

EOS

    def exec_app
      original_cwd = Dir.pwd

      loop do
        if exe = find_executable
          contents = File.read(exe)

          if /(APP|ENGINE)_PATH/.match?(contents)
            $stderr.puts(RAILS_WARNING)
            exec RUBY, exe, *ARGV
            break # non reachable, hack to be able to stub exec in the test suite
          elsif exe.end_with?("bin/rails") && contents.include?("This file was generated by Bundler")
            exec RUBY, exe, *ARGV
            break
          end
        end

        # If we exhaust the search there is no executable, this could be a
        # call to generate a new application, so restore the original cwd.
        Dir.chdir(original_cwd) && return if Pathname.new(Dir.pwd).root?

        # Otherwise keep moving upwards in search of an executable.
        Dir.chdir("..")
      end
    end

    def find_executable
      EXECUTABLES.find { |exe| File.file?(exe) }
    end
  end
end
